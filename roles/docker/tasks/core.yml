- name: 'gate : network'
  docker_network:
    name: core_gate

- name: 'gate : container'
  docker_container:
    name: core_gate
    image: traefik:latest
    pull: '{{ docker_pull | default(false) | bool }}'
    restart_policy: 'unless-stopped'
    state: started
    command: >
      {% if gate_disable_tls | default(false) %}
      --entrypoints='Name:http Address::80'
      --defaultentrypoints=http
      {% else %}
      --acme=true
      --acme.onhostrule=true
      --acme.email={{ base_devops_email }}
      --acme.storage=/certs/acme.json
      --acme.entrypoint=https
      --entrypoints='Name:http Address::80 Redirect.EntryPoint:https'
      --entrypoints='Name:https Address::443 TLS'
      --defaultentrypoints=https,http
      {% endif %}
      --docker=true
      --docker.exposedbydefault=false
      --docker.watch=true
      --web=true
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/data/core_gate/certs/:/certs'
    ports:
      - '80:80'
      - '443:443'
      - '127.0.0.1:8080:8080'
    networks:
      - name: bridge
      - name: core_gate
    purge_networks: true

- name: 'logging : container'
  docker_container:
    name: core_logging
    image: iamatypeofwalrus/logspout-loggly:latest
    pull: '{{ docker_pull | default(false) | bool }}'
    restart_policy: 'unless-stopped'
    state: started
    env:
      LOGGLY_TOKEN: '{{ logging_token }}'
      LOGGLY_TAGS: '{{ base_name_host }}.{{ base_name_domain }}'
      FILTER_NAME: '*'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
    networks:
      - name: bridge
    purge_networks: true

# configure firewall
- name: 'allow http and https traffik'
  copy:
    src: 'packetfilter-config-docker.sh'
    dest: '/etc/packetfilter/10-docker.sh'
    owner: root
    group: root
    mode: 0755
  notify: restart packetfilter

- meta: flush_handlers
