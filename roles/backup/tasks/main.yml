- name: 'backup : network'
  docker_network:
    name: core_backup

- name: 'backup : container'
  docker_container:
    name: core_backup
    image: quay.io/process_team/docker_backup:latest
    # TODO: we want true here, but this results in 'changed' status even if nothing changed
    pull: false
    restart_policy: 'on-failure'
    restart_retries: 5
    state: started
    env:
      BACKUP_INTERVAL: '{{ backup_interval }}'
      BACKUP_FULL_EVERY: '{{ backup_full_every }}'
      BACKUP_REMOVE_OLDER_THAN: '{{ backup_remove_older_than }}'
      BACKUP_TARGET_URL: '{{ backup_target_url }}'
      AWS_ACCESS_KEY_ID: '{{ backup_target_aws_key }}'
      AWS_SECRET_ACCESS_KEY: '{{ backup_target_aws_secret_key }}'
    volumes:
      - '/:/host:ro'
      - '{{ base_data_dir }}/core_backup/backups/:/backups'
      - '{{ base_data_dir }}/core_backup/backups-tmp/:/backups-tmp'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - name: bridge
      - name: core_backup
    purge_networks: true

- name: 'backup : example1'
  docker_container:
    name: example1
    image: mongo:latest
    # TODO: we want true here, but this results in 'changed' status even if nothing changed
    pull: false
    restart_policy: 'on-failure'
    restart_retries: 5
    state: started
    labels:
      backup: "{ type: mongodb, port: 27017 }"
    volumes:
      - '{{ base_data_dir }}/example1/db/:/data/db'
    networks:
      - name: core_backup
    purge_networks: true

- name: 'backup : example2'
  docker_container:
    name: example2
    image: dockercloud/hello-world:latest
    # TODO: we want true here, but this results in 'changed' status even if nothing changed
    pull: false
    restart_policy: 'on-failure'
    restart_retries: 5
    state: started
    labels:
      traefik.enable: "true"
      traefik.backend: example2
      traefik.frontend.rule: Host:example2.local
      traefik.port: "80"
      backup: "{ type: mount, volume: '/www' }"
    volumes:
      - '{{ base_data_dir }}/example2/webroot/:/www'
    networks:
      - name: core_gate
    purge_networks: true
